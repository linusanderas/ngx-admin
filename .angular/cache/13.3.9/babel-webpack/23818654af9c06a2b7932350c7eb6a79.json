{"ast":null,"code":"import _classCallCheck from \"C:\\\\Utveckling\\\\Devoted-admin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Utveckling\\\\Devoted-admin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport var EqualValidator = /*#__PURE__*/(function () {\n  var EqualValidator = /*#__PURE__*/function () {\n    function EqualValidator(validateEqual, reverse) {\n      _classCallCheck(this, EqualValidator);\n\n      this.validateEqual = validateEqual;\n      this.reverse = reverse;\n    }\n\n    _createClass(EqualValidator, [{\n      key: \"isReverse\",\n      get: function get() {\n        if (!this.reverse) return false;\n        return this.reverse === 'true' ? true : false;\n      }\n    }, {\n      key: \"validate\",\n      value: function validate(c) {\n        // self value\n        var v = c.value; // control vlaue\n\n        var e = c.root.get(this.validateEqual); // value not equal\n\n        if (e && v !== e.value && !this.isReverse) {\n          return {\n            validateEqual: false\n          };\n        } // value equal and reverse\n\n\n        if (e && v === e.value && this.isReverse) {\n          delete e.errors['validateEqual'];\n          if (!Object.keys(e.errors).length) e.setErrors(null);\n        } // value not equal and reverse\n\n\n        if (e && v !== e.value && this.isReverse) {\n          e.setErrors({\n            validateEqual: false\n          });\n        }\n\n        return null;\n      }\n    }]);\n\n    return EqualValidator;\n  }();\n\n  EqualValidator.ɵfac = function EqualValidator_Factory(t) {\n    return new (t || EqualValidator)(i0.ɵɵinjectAttribute('validateEqual'), i0.ɵɵinjectAttribute('reverse'));\n  };\n\n  EqualValidator.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EqualValidator,\n    selectors: [[\"\", \"validateEqual\", \"\", \"formControlName\", \"\"], [\"\", \"validateEqual\", \"\", \"formControl\", \"\"], [\"\", \"validateEqual\", \"\", \"ngModel\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(function () {\n        return EqualValidator;\n      }),\n      multi: true\n    }])]\n  });\n  return EqualValidator;\n})();","map":null,"metadata":{},"sourceType":"module"}