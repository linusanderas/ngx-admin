{"ast":null,"code":"import _classCallCheck from \"C:\\\\Utveckling\\\\Devoted-admin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Utveckling\\\\Devoted-admin\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport Chart from 'chart.js';\nimport * as i0 from \"@angular/core\";\nexport var ChartsComponent = /*#__PURE__*/(function () {\n  var ChartsComponent = /*#__PURE__*/function () {\n    function ChartsComponent() {\n      _classCallCheck(this, ChartsComponent);\n\n      this.chartColor = \"#FFFFFF\";\n    }\n\n    _createClass(ChartsComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.canvas = document.getElementById(\"chartHours\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.myChart = new Chart(this.ctx, {\n          type: 'line',\n          data: {\n            labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\"],\n            datasets: [{\n              borderColor: \"#6bd098\",\n              backgroundColor: \"#6bd098\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              borderWidth: 3,\n              data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n            }, {\n              borderColor: \"#f17e5d\",\n              backgroundColor: \"#f17e5d\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              borderWidth: 3,\n              data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n            }, {\n              borderColor: \"#fcc468\",\n              backgroundColor: \"#fcc468\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              borderWidth: 3,\n              data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n            }]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            tooltips: {\n              enabled: false\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  fontColor: \"#9f9f9f\",\n                  beginAtZero: false,\n                  maxTicksLimit: 5 //padding: 20\n\n                },\n                gridLines: {\n                  drawBorder: false,\n                  zeroLineColor: \"transparent\",\n                  color: 'rgba(255,255,255,0.05)'\n                }\n              }],\n              dataset: [{\n                barPercentage: 1.6,\n                gridLines: {\n                  drawBorder: false,\n                  color: 'rgba(255,255,255,0.1)',\n                  zeroLineColor: \"transparent\",\n                  display: false\n                },\n                ticks: {\n                  padding: 20,\n                  fontColor: \"#9f9f9f\"\n                }\n              }]\n            }\n          }\n        });\n        this.canvas = document.getElementById(\"chartEmail\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.myChart = new Chart(this.ctx, {\n          type: 'pie',\n          data: {\n            labels: [1, 2, 3],\n            datasets: [{\n              label: \"Emails\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              backgroundColor: ['#e3e3e3', '#4acccd', '#fcc468'],\n              borderWidth: 0,\n              data: [542, 480, 430]\n            }]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            tooltips: {\n              enabled: false\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  display: false\n                },\n                gridLines: {\n                  drawBorder: false,\n                  zeroLineColor: \"transparent\",\n                  color: 'rgba(255,255,255,0.05)'\n                }\n              }],\n              dataset: [{\n                barPercentage: 1.6,\n                gridLines: {\n                  drawBorder: false,\n                  color: 'rgba(255,255,255,0.1)',\n                  zeroLineColor: \"transparent\"\n                },\n                ticks: {\n                  display: false\n                }\n              }]\n            }\n          }\n        });\n        this.canvas = document.getElementById(\"activity\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n        this.gradientStroke.addColorStop(0, '#80b6f4');\n        this.gradientStroke.addColorStop(1, this.chartColor);\n        this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n        this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        this.gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n        this.myChart = new Chart(this.ctx, {\n          type: 'bar',\n          data: {\n            labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n            datasets: [{\n              label: \"Data\",\n              borderColor: '#fcc468',\n              fill: true,\n              backgroundColor: '#fcc468',\n              hoverBorderColor: '#fcc468',\n              borderWidth: 8,\n              data: [100, 120, 80, 100, 90, 130, 110, 100, 80, 110, 130, 140, 130, 120, 130, 80, 100, 90, 120, 130]\n            }, {\n              label: \"Data\",\n              borderColor: '#4cbdd7',\n              fill: true,\n              backgroundColor: '#4cbdd7',\n              hoverBorderColor: '#4cbdd7',\n              borderWidth: 8,\n              data: [80, 140, 50, 120, 50, 150, 60, 130, 50, 130, 150, 100, 110, 80, 140, 50, 140, 50, 110, 150]\n            }]\n          },\n          options: {\n            tooltips: {\n              tooltipFillColor: \"rgba(0,0,0,0.5)\",\n              tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n              tooltipFontSize: 14,\n              tooltipFontStyle: \"normal\",\n              tooltipFontColor: \"#fff\",\n              tooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n              tooltipTitleFontSize: 14,\n              tooltipTitleFontStyle: \"bold\",\n              tooltipTitleFontColor: \"#fff\",\n              tooltipYPadding: 6,\n              tooltipXPadding: 6,\n              tooltipCaretSize: 8,\n              tooltipCornerRadius: 6,\n              tooltipXOffset: 10\n            },\n            legend: {\n              display: false\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  fontColor: \"#9f9f9f\",\n                  fontStyle: \"bold\",\n                  beginAtZero: true,\n                  maxTicksLimit: 5,\n                  padding: 20\n                },\n                gridLines: {\n                  zeroLineColor: \"transparent\",\n                  display: true,\n                  drawBorder: false,\n                  color: '#9f9f9f'\n                }\n              }],\n              dataset: [{\n                barPercentage: 0.4,\n                gridLines: {\n                  zeroLineColor: \"white\",\n                  display: false,\n                  drawBorder: false,\n                  color: 'transparent'\n                },\n                ticks: {\n                  padding: 20,\n                  fontColor: \"#9f9f9f\",\n                  fontStyle: \"bold\"\n                }\n              }]\n            }\n          }\n        });\n        this.canvas = document.getElementById(\"chartViews\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n        this.gradientStroke.addColorStop(0, '#80b6f4');\n        this.gradientStroke.addColorStop(1, this.chartColor);\n        this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n        this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        this.gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n        this.myChart = new Chart(this.ctx, {\n          type: 'bar',\n          data: {\n            labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n            datasets: [{\n              label: \"Data\",\n              borderColor: '#fcc468',\n              fill: true,\n              backgroundColor: '#fcc468',\n              hoverBorderColor: '#fcc468',\n              borderWidth: 5,\n              data: [100, 120, 80, 100, 90, 130, 110, 100, 80, 110, 130, 140, 130, 120, 130, 80, 100, 90, 120, 130]\n            }]\n          },\n          options: {\n            tooltips: {\n              tooltipFillColor: \"rgba(0,0,0,0.5)\",\n              tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n              tooltipFontSize: 14,\n              tooltipFontStyle: \"normal\",\n              tooltipFontColor: \"#fff\",\n              tooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n              tooltipTitleFontSize: 14,\n              tooltipTitleFontStyle: \"bold\",\n              tooltipTitleFontColor: \"#fff\",\n              tooltipYPadding: 6,\n              tooltipXPadding: 6,\n              tooltipCaretSize: 8,\n              tooltipCornerRadius: 6,\n              tooltipXOffset: 10\n            },\n            legend: {\n              display: false\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  fontColor: \"#9f9f9f\",\n                  fontStyle: \"bold\",\n                  beginAtZero: true,\n                  maxTicksLimit: 5,\n                  padding: 20\n                },\n                gridLines: {\n                  zeroLineColor: \"transparent\",\n                  display: true,\n                  drawBorder: false,\n                  color: '#9f9f9f'\n                }\n              }],\n              dataset: [{\n                barPercentage: 0.4,\n                gridLines: {\n                  zeroLineColor: \"white\",\n                  display: false,\n                  drawBorder: false,\n                  color: 'transparent'\n                },\n                ticks: {\n                  padding: 20,\n                  fontColor: \"#9f9f9f\",\n                  fontStyle: \"bold\"\n                }\n              }]\n            }\n          }\n        });\n        this.canvas = document.getElementById(\"chartStock\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n        this.gradientStroke.addColorStop(0, '#80b6f4');\n        this.gradientStroke.addColorStop(1, this.chartColor);\n        this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n        this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        this.gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n        this.myChart = new Chart(this.ctx, {\n          type: 'line',\n          data: {\n            labels: [\"6pm\", \"9pm\", \"11pm\", \"2am\", \"4am\", \"6am\", \"8am\"],\n            datasets: [{\n              label: \"Active Users\",\n              borderColor: \"#f17e5d\",\n              pointBackgroundColor: \"#f17e5d\",\n              pointRadius: 3,\n              pointHoverRadius: 3,\n              lineTension: 0,\n              fill: false,\n              borderWidth: 3,\n              data: [200, 250, 300, 350, 280, 330, 400]\n            }]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            tooltips: {\n              enabled: false\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  fontColor: \"#9f9f9f\",\n                  beginAtZero: false,\n                  maxTicksLimit: 5\n                },\n                gridLines: {\n                  drawBorder: false,\n                  borderDash: [8, 5],\n                  zeroLineColor: \"transparent\",\n                  color: '#9f9f9f'\n                }\n              }],\n              dataset: [{\n                barPercentage: 1.6,\n                gridLines: {\n                  drawBorder: false,\n                  borderDash: [8, 5],\n                  color: '#9f9f9f',\n                  zeroLineColor: \"transparent\"\n                },\n                ticks: {\n                  padding: 20,\n                  fontColor: \"#9f9f9f\"\n                }\n              }]\n            }\n          }\n        });\n        this.canvas = document.getElementById(\"performance\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n        this.gradientStroke.addColorStop(0, '#80b6f4');\n        this.gradientStroke.addColorStop(1, this.chartColor);\n        this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n        this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        this.gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n        this.myChart = new Chart(this.ctx, {\n          type: 'line',\n          data: {\n            labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\"],\n            datasets: [{\n              label: \"Active Users\",\n              borderColor: \"#6bd098\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              fill: false,\n              borderWidth: 3,\n              data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610]\n            }]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            tooltips: {\n              enabled: false\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  fontColor: \"#9f9f9f\",\n                  beginAtZero: false,\n                  maxTicksLimit: 5 //padding: 20\n\n                },\n                gridLines: {\n                  drawBorder: false,\n                  zeroLineColor: \"transparent\",\n                  color: 'rgba(255,255,255,0.05)'\n                }\n              }],\n              dataset: [{\n                barPercentage: 1.6,\n                gridLines: {\n                  drawBorder: false,\n                  color: 'rgba(255,255,255,0.1)',\n                  zeroLineColor: \"transparent\",\n                  display: false\n                },\n                ticks: {\n                  padding: 20,\n                  fontColor: \"#9f9f9f\"\n                }\n              }]\n            }\n          }\n        }); // General configuration for the charts with Line gradientStroke\n\n        this.gradientChartOptionsConfiguration = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            bodySpacing: 4,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\",\n            xPadding: 10,\n            yPadding: 10,\n            caretPadding: 10\n          },\n          responsive: 1,\n          scales: {\n            yAxes: [{\n              display: 0,\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawTicks: false,\n                display: false,\n                drawBorder: false\n              }\n            }],\n            xAxes: [{\n              display: 0,\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawTicks: false,\n                display: false,\n                drawBorder: false\n              }\n            }]\n          },\n          layout: {\n            padding: {\n              left: 0,\n              right: 0,\n              top: 15,\n              bottom: 15\n            }\n          }\n        };\n        this.gradientChartOptionsConfigurationWithNumbersAndGrid = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            bodySpacing: 4,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\",\n            xPadding: 10,\n            yPadding: 10,\n            caretPadding: 10\n          },\n          responsive: true,\n          scales: {\n            yAxes: [{\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawBorder: false\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawTicks: false,\n                display: false,\n                drawBorder: false\n              }\n            }]\n          },\n          layout: {\n            padding: {\n              left: 0,\n              right: 0,\n              top: 15,\n              bottom: 15\n            }\n          }\n        };\n      }\n    }]);\n\n    return ChartsComponent;\n  }();\n\n  ChartsComponent.ɵfac = function ChartsComponent_Factory(t) {\n    return new (t || ChartsComponent)();\n  };\n\n  ChartsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsComponent,\n    selectors: [[\"charts-cmp\"]],\n    decls: 79,\n    vars: 0,\n    consts: [[1, \"main-content\"], [\"target\", \"_blank\", \"href\", \"https://github.com/gionkunz/chartist-js\"], [\"target\", \"_blank\", \"href\", \"https://gionkunz.github.io/chartist-js/api-documentation.html\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\", \"card-chart\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-category\"], [1, \"card-body\"], [\"id\", \"performance\"], [\"id\", \"chartStock\"], [\"id\", \"chartViews\"], [1, \"card\", \"car-chart\"], [\"id\", \"activity\"], [1, \"col-md-4\"], [1, \"card\"], [\"id\", \"chartEmail\", \"width\", \"456\", \"height\", \"300\", 1, \"ct-chart\", \"ct-perfect-fourth\"], [1, \"card-footer\"], [1, \"legend\"], [1, \"fa\", \"fa-circle\", \"text-info\"], [1, \"stats\"], [1, \"fa\", \"fa-calendar\"], [1, \"col-md-8\"], [\"id\", \"chartHours\", \"width\", \"400\", \"height\", \"100\"], [1, \"fa\", \"fa-history\"]],\n    template: function ChartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2, \"Simple yet flexible JavaScript charting for designers & developers. Made by our friends from \");\n        i0.ɵɵelementStart(3, \"a\", 1);\n        i0.ɵɵtext(4, \"Chartist.js\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \". Please check \");\n        i0.ɵɵelementStart(6, \"a\", 2);\n        i0.ɵɵtext(7, \"the full documentation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \".\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 4)(11, \"div\", 5)(12, \"div\", 6)(13, \"h5\", 7);\n        i0.ɵɵtext(14, \"24 Hours Performance\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \"Line Chart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 9);\n        i0.ɵɵelement(18, \"canvas\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 5)(21, \"div\", 6)(22, \"h5\", 7);\n        i0.ɵɵtext(23, \"NASDAQ: AAPL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\", 8);\n        i0.ɵɵtext(25, \"Line Chart with Points\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 9);\n        i0.ɵɵelement(27, \"canvas\", 11);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"div\", 3)(29, \"div\", 4)(30, \"div\", 5)(31, \"div\", 6)(32, \"h5\", 7);\n        i0.ɵɵtext(33, \"Views\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"p\", 8);\n        i0.ɵɵtext(35, \"Bar Chart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 9);\n        i0.ɵɵelement(37, \"canvas\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"div\", 4)(39, \"div\", 13)(40, \"div\", 6)(41, \"h5\", 7);\n        i0.ɵɵtext(42, \"Activity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"p\", 8);\n        i0.ɵɵtext(44, \"Multiple Bars Chart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 9);\n        i0.ɵɵelement(46, \"canvas\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(47, \"div\", 3)(48, \"div\", 15)(49, \"div\", 16)(50, \"div\", 6)(51, \"h5\", 7);\n        i0.ɵɵtext(52, \"Email Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"p\", 8);\n        i0.ɵɵtext(54, \"Last Campaign Performance\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"div\", 9);\n        i0.ɵɵelement(56, \"canvas\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"div\", 18)(58, \"div\", 19);\n        i0.ɵɵelement(59, \"i\", 20);\n        i0.ɵɵtext(60, \" Open \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(61, \"hr\");\n        i0.ɵɵelementStart(62, \"div\", 21);\n        i0.ɵɵelement(63, \"i\", 22);\n        i0.ɵɵtext(64, \" Number of emails sent \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(65, \"div\", 23)(66, \"div\", 16)(67, \"div\", 6)(68, \"h5\", 7);\n        i0.ɵɵtext(69, \"Users Behavior\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"p\", 8);\n        i0.ɵɵtext(71, \"24 Hours performance\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(72, \"div\", 9);\n        i0.ɵɵelement(73, \"canvas\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 18);\n        i0.ɵɵelement(75, \"hr\");\n        i0.ɵɵelementStart(76, \"div\", 21);\n        i0.ɵɵelement(77, \"i\", 25);\n        i0.ɵɵtext(78, \" Updated 3 minutes ago \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n    },\n    encapsulation: 2\n  });\n  return ChartsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}